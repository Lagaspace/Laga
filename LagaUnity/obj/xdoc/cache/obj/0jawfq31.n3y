id: LagaUnity
language: CSharp
name:
  Default: LagaUnity
qualifiedName:
  Default: LagaUnity
type: Assembly
modifiers: {}
items:
- id: LagaUnity
  commentId: N:LagaUnity
  language: CSharp
  name:
    CSharp: LagaUnity
    VB: LagaUnity
  nameWithType:
    CSharp: LagaUnity
    VB: LagaUnity
  qualifiedName:
    CSharp: LagaUnity
    VB: LagaUnity
  type: Namespace
  assemblies:
  - LagaUnity
  modifiers: {}
  items:
  - id: LagaUnity.Line
    commentId: T:LagaUnity.Line
    language: CSharp
    name:
      CSharp: Line
      VB: Line
    nameWithType:
      CSharp: Line
      VB: Line
    qualifiedName:
      CSharp: LagaUnity.Line
      VB: LagaUnity.Line
    type: Class
    assemblies:
    - LagaUnity
    namespace: LagaUnity
    source:
      id: Line
      path: C:\Users\delab\Documents\GitHub\Laga\LagaUnity\Line.cs
      startLine: 9
    syntax:
      content:
        CSharp: public class Line
        VB: Public Class Line
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: LagaUnity.Line.PointA
      commentId: P:LagaUnity.Line.PointA
      language: CSharp
      name:
        CSharp: PointA
        VB: PointA
      nameWithType:
        CSharp: Line.PointA
        VB: Line.PointA
      qualifiedName:
        CSharp: LagaUnity.Line.PointA
        VB: LagaUnity.Line.PointA
      type: Property
      assemblies:
      - LagaUnity
      namespace: LagaUnity
      source:
        id: PointA
        path: C:\Users\delab\Documents\GitHub\Laga\LagaUnity\Line.cs
        startLine: 17
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public Point PointA { get; set; }
          VB: Public Property PointA As Point
        parameters: []
        return:
          type: LagaUnity.Point
      overload: LagaUnity.Line.PointA*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: LagaUnity.Line.PointB
      commentId: P:LagaUnity.Line.PointB
      language: CSharp
      name:
        CSharp: PointB
        VB: PointB
      nameWithType:
        CSharp: Line.PointB
        VB: Line.PointB
      qualifiedName:
        CSharp: LagaUnity.Line.PointB
        VB: LagaUnity.Line.PointB
      type: Property
      assemblies:
      - LagaUnity
      namespace: LagaUnity
      source:
        id: PointB
        path: C:\Users\delab\Documents\GitHub\Laga\LagaUnity\Line.cs
        startLine: 32
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public Point PointB { get; set; }
          VB: Public Property PointB As Point
        parameters: []
        return:
          type: LagaUnity.Point
      overload: LagaUnity.Line.PointB*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: LagaUnity.Line.#ctor(LagaUnity.Point,LagaUnity.Point)
      commentId: M:LagaUnity.Line.#ctor(LagaUnity.Point,LagaUnity.Point)
      language: CSharp
      name:
        CSharp: Line(Point, Point)
        VB: Line(Point, Point)
      nameWithType:
        CSharp: Line.Line(Point, Point)
        VB: Line.Line(Point, Point)
      qualifiedName:
        CSharp: LagaUnity.Line.Line(LagaUnity.Point, LagaUnity.Point)
        VB: LagaUnity.Line.Line(LagaUnity.Point, LagaUnity.Point)
      type: Constructor
      assemblies:
      - LagaUnity
      namespace: LagaUnity
      source:
        id: .ctor
        path: C:\Users\delab\Documents\GitHub\Laga\LagaUnity\Line.cs
        startLine: 49
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public Line(Point pointA, Point pointB)
          VB: Public Sub New(pointA As Point, pointB As Point)
        parameters:
        - id: pointA
          type: LagaUnity.Point
          description: ''
        - id: pointB
          type: LagaUnity.Point
          description: ''
      overload: LagaUnity.Line.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: LagaUnity.Line.MidPoint
      commentId: M:LagaUnity.Line.MidPoint
      language: CSharp
      name:
        CSharp: MidPoint()
        VB: MidPoint()
      nameWithType:
        CSharp: Line.MidPoint()
        VB: Line.MidPoint()
      qualifiedName:
        CSharp: LagaUnity.Line.MidPoint()
        VB: LagaUnity.Line.MidPoint()
      type: Method
      assemblies:
      - LagaUnity
      namespace: LagaUnity
      source:
        id: MidPoint
        path: C:\Users\delab\Documents\GitHub\Laga\LagaUnity\Line.cs
        startLine: 59
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public Point MidPoint()
          VB: Public Function MidPoint As Point
        return:
          type: LagaUnity.Point
          description: ''
      overload: LagaUnity.Line.MidPoint*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: LagaUnity.Line.ToString
      commentId: M:LagaUnity.Line.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: Line.ToString()
        VB: Line.ToString()
      qualifiedName:
        CSharp: LagaUnity.Line.ToString()
        VB: LagaUnity.Line.ToString()
      type: Method
      assemblies:
      - LagaUnity
      namespace: LagaUnity
      source:
        id: ToString
        path: C:\Users\delab\Documents\GitHub\Laga\LagaUnity\Line.cs
        startLine: 68
      summary: "\nLine point coordinates\n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: string
      overload: LagaUnity.Line.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: LagaUnity.Line.Draw(System.Single,UnityEngine.Color)
      commentId: M:LagaUnity.Line.Draw(System.Single,UnityEngine.Color)
      language: CSharp
      name:
        CSharp: Draw(Single, Color)
        VB: Draw(Single, Color)
      nameWithType:
        CSharp: Line.Draw(Single, Color)
        VB: Line.Draw(Single, Color)
      qualifiedName:
        CSharp: LagaUnity.Line.Draw(System.Single, UnityEngine.Color)
        VB: LagaUnity.Line.Draw(System.Single, UnityEngine.Color)
      type: Method
      assemblies:
      - LagaUnity
      namespace: LagaUnity
      source:
        id: Draw
        path: C:\Users\delab\Documents\GitHub\Laga\LagaUnity\Line.cs
        startLine: 78
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public void Draw(float width, Color color)
          VB: Public Sub Draw(width As Single, color As Color)
        parameters:
        - id: width
          type: System.Single
          description: ''
        - id: color
          type: UnityEngine.Color
          description: ''
      overload: LagaUnity.Line.Draw*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: LagaUnity.Line.DrawLine(LagaUnity.Point,LagaUnity.Point,System.Single,UnityEngine.Color)
      commentId: M:LagaUnity.Line.DrawLine(LagaUnity.Point,LagaUnity.Point,System.Single,UnityEngine.Color)
      language: CSharp
      name:
        CSharp: DrawLine(Point, Point, Single, Color)
        VB: DrawLine(Point, Point, Single, Color)
      nameWithType:
        CSharp: Line.DrawLine(Point, Point, Single, Color)
        VB: Line.DrawLine(Point, Point, Single, Color)
      qualifiedName:
        CSharp: LagaUnity.Line.DrawLine(LagaUnity.Point, LagaUnity.Point, System.Single, UnityEngine.Color)
        VB: LagaUnity.Line.DrawLine(LagaUnity.Point, LagaUnity.Point, System.Single, UnityEngine.Color)
      type: Method
      assemblies:
      - LagaUnity
      namespace: LagaUnity
      source:
        id: DrawLine
        path: C:\Users\delab\Documents\GitHub\Laga\LagaUnity\Line.cs
        startLine: 90
      summary: "\nDraw a line\n"
      example: []
      syntax:
        content:
          CSharp: public static void DrawLine(Point pointA, Point pointB, float width, Color color)
          VB: Public Shared Sub DrawLine(pointA As Point, pointB As Point, width As Single, color As Color)
        parameters:
        - id: pointA
          type: LagaUnity.Point
          description: The first point
        - id: pointB
          type: LagaUnity.Point
          description: ''
        - id: width
          type: System.Single
          description: ''
        - id: color
          type: UnityEngine.Color
          description: ''
      overload: LagaUnity.Line.DrawLine*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: LagaUnity.Point
    commentId: T:LagaUnity.Point
    language: CSharp
    name:
      CSharp: Point
      VB: Point
    nameWithType:
      CSharp: Point
      VB: Point
    qualifiedName:
      CSharp: LagaUnity.Point
      VB: LagaUnity.Point
    type: Class
    assemblies:
    - LagaUnity
    namespace: LagaUnity
    source:
      id: Point
      path: C:\Users\delab\Documents\GitHub\Laga\LagaUnity\Point.cs
      startLine: 5
    syntax:
      content:
        CSharp: public class Point
        VB: Public Class Point
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: LagaUnity.Point.X
      commentId: P:LagaUnity.Point.X
      language: CSharp
      name:
        CSharp: X
        VB: X
      nameWithType:
        CSharp: Point.X
        VB: Point.X
      qualifiedName:
        CSharp: LagaUnity.Point.X
        VB: LagaUnity.Point.X
      type: Property
      assemblies:
      - LagaUnity
      namespace: LagaUnity
      source:
        id: X
        path: C:\Users\delab\Documents\GitHub\Laga\LagaUnity\Point.cs
        startLine: 15
      summary: "\nThe X coordinate\n"
      example: []
      syntax:
        content:
          CSharp: public float X { get; set; }
          VB: Public Property X As Single
        parameters: []
        return:
          type: System.Single
      overload: LagaUnity.Point.X*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: LagaUnity.Point.Y
      commentId: P:LagaUnity.Point.Y
      language: CSharp
      name:
        CSharp: Y
        VB: Y
      nameWithType:
        CSharp: Point.Y
        VB: Point.Y
      qualifiedName:
        CSharp: LagaUnity.Point.Y
        VB: LagaUnity.Point.Y
      type: Property
      assemblies:
      - LagaUnity
      namespace: LagaUnity
      source:
        id: Y
        path: C:\Users\delab\Documents\GitHub\Laga\LagaUnity\Point.cs
        startLine: 30
      summary: "\nThe Y coordinate\n"
      example: []
      syntax:
        content:
          CSharp: public float Y { get; set; }
          VB: Public Property Y As Single
        parameters: []
        return:
          type: System.Single
      overload: LagaUnity.Point.Y*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: LagaUnity.Point.Z
      commentId: P:LagaUnity.Point.Z
      language: CSharp
      name:
        CSharp: Z
        VB: Z
      nameWithType:
        CSharp: Point.Z
        VB: Point.Z
      qualifiedName:
        CSharp: LagaUnity.Point.Z
        VB: LagaUnity.Point.Z
      type: Property
      assemblies:
      - LagaUnity
      namespace: LagaUnity
      source:
        id: Z
        path: C:\Users\delab\Documents\GitHub\Laga\LagaUnity\Point.cs
        startLine: 45
      summary: "\nThe Z coordinate\n"
      example: []
      syntax:
        content:
          CSharp: public float Z { get; set; }
          VB: Public Property Z As Single
        parameters: []
        return:
          type: System.Single
      overload: LagaUnity.Point.Z*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: LagaUnity.Point.#ctor(System.Single,System.Single,System.Single)
      commentId: M:LagaUnity.Point.#ctor(System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Point(Single, Single, Single)
        VB: Point(Single, Single, Single)
      nameWithType:
        CSharp: Point.Point(Single, Single, Single)
        VB: Point.Point(Single, Single, Single)
      qualifiedName:
        CSharp: LagaUnity.Point.Point(System.Single, System.Single, System.Single)
        VB: LagaUnity.Point.Point(System.Single, System.Single, System.Single)
      type: Constructor
      assemblies:
      - LagaUnity
      namespace: LagaUnity
      source:
        id: .ctor
        path: C:\Users\delab\Documents\GitHub\Laga\LagaUnity\Point.cs
        startLine: 63
      summary: "\nBuild a laga point object by 3 coordinates.\n"
      example: []
      syntax:
        content:
          CSharp: public Point(float X, float Y, float Z)
          VB: Public Sub New(X As Single, Y As Single, Z As Single)
        parameters:
        - id: X
          type: System.Single
          description: X coordinate
        - id: Y
          type: System.Single
          description: Y coordinate
        - id: Z
          type: System.Single
          description: z coordinate
      overload: LagaUnity.Point.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: LagaUnity.Point.ToString
      commentId: M:LagaUnity.Point.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: Point.ToString()
        VB: Point.ToString()
      qualifiedName:
        CSharp: LagaUnity.Point.ToString()
        VB: LagaUnity.Point.ToString()
      type: Method
      assemblies:
      - LagaUnity
      namespace: LagaUnity
      source:
        id: ToString
        path: C:\Users\delab\Documents\GitHub\Laga\LagaUnity\Point.cs
        startLine: 74
      summary: "\nOverride string method, Print point coordinates\n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: string
      overload: LagaUnity.Point.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: LagaUnity.Point.Draw(System.Single,UnityEngine.Color)
      commentId: M:LagaUnity.Point.Draw(System.Single,UnityEngine.Color)
      language: CSharp
      name:
        CSharp: Draw(Single, Color)
        VB: Draw(Single, Color)
      nameWithType:
        CSharp: Point.Draw(Single, Color)
        VB: Point.Draw(Single, Color)
      qualifiedName:
        CSharp: LagaUnity.Point.Draw(System.Single, UnityEngine.Color)
        VB: LagaUnity.Point.Draw(System.Single, UnityEngine.Color)
      type: Method
      assemblies:
      - LagaUnity
      namespace: LagaUnity
      source:
        id: Draw
        path: C:\Users\delab\Documents\GitHub\Laga\LagaUnity\Point.cs
        startLine: 84
      summary: "\nDraw the point\n"
      example: []
      syntax:
        content:
          CSharp: public void Draw(float width, Color color)
          VB: Public Sub Draw(width As Single, color As Color)
        parameters:
        - id: width
          type: System.Single
          description: width for the point, 2.0
        - id: color
          type: UnityEngine.Color
          description: the color&apos;s point to draw
      overload: LagaUnity.Point.Draw*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: LagaUnity.Point.DistanceTo(LagaUnity.Point)
      commentId: M:LagaUnity.Point.DistanceTo(LagaUnity.Point)
      language: CSharp
      name:
        CSharp: DistanceTo(Point)
        VB: DistanceTo(Point)
      nameWithType:
        CSharp: Point.DistanceTo(Point)
        VB: Point.DistanceTo(Point)
      qualifiedName:
        CSharp: LagaUnity.Point.DistanceTo(LagaUnity.Point)
        VB: LagaUnity.Point.DistanceTo(LagaUnity.Point)
      type: Method
      assemblies:
      - LagaUnity
      namespace: LagaUnity
      source:
        id: DistanceTo
        path: C:\Users\delab\Documents\GitHub\Laga\LagaUnity\Point.cs
        startLine: 94
      summary: "\nCalculate the distance to the second point.\n"
      example: []
      syntax:
        content:
          CSharp: public float DistanceTo(Point pointB)
          VB: Public Function DistanceTo(pointB As Point) As Single
        parameters:
        - id: pointB
          type: LagaUnity.Point
          description: ''
        return:
          type: System.Single
          description: ''
      overload: LagaUnity.Point.DistanceTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: LagaUnity.Point.DrawPoint(LagaUnity.Point,System.Single,UnityEngine.Color)
      commentId: M:LagaUnity.Point.DrawPoint(LagaUnity.Point,System.Single,UnityEngine.Color)
      language: CSharp
      name:
        CSharp: DrawPoint(Point, Single, Color)
        VB: DrawPoint(Point, Single, Color)
      nameWithType:
        CSharp: Point.DrawPoint(Point, Single, Color)
        VB: Point.DrawPoint(Point, Single, Color)
      qualifiedName:
        CSharp: LagaUnity.Point.DrawPoint(LagaUnity.Point, System.Single, UnityEngine.Color)
        VB: LagaUnity.Point.DrawPoint(LagaUnity.Point, System.Single, UnityEngine.Color)
      type: Method
      assemblies:
      - LagaUnity
      namespace: LagaUnity
      source:
        id: DrawPoint
        path: C:\Users\delab\Documents\GitHub\Laga\LagaUnity\Point.cs
        startLine: 106
      summary: "\nDraw a point\n"
      example: []
      syntax:
        content:
          CSharp: public static void DrawPoint(Point point, float width, Color color)
          VB: Public Shared Sub DrawPoint(point As Point, width As Single, color As Color)
        parameters:
        - id: point
          type: LagaUnity.Point
          description: ''
        - id: width
          type: System.Single
          description: ''
        - id: color
          type: UnityEngine.Color
          description: ''
      overload: LagaUnity.Point.DrawPoint*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  LagaUnity:
    name:
      CSharp:
      - name: LagaUnity
        nameWithType: LagaUnity
        qualifiedName: LagaUnity
      VB:
      - name: LagaUnity
        nameWithType: LagaUnity
        qualifiedName: LagaUnity
    isDefinition: true
    commentId: N:LagaUnity
  LagaUnity.Point:
    name:
      CSharp:
      - id: LagaUnity.Point
        name: Point
        nameWithType: Point
        qualifiedName: LagaUnity.Point
      VB:
      - id: LagaUnity.Point
        name: Point
        nameWithType: Point
        qualifiedName: LagaUnity.Point
    isDefinition: true
    parent: LagaUnity
    commentId: T:LagaUnity.Point
  LagaUnity.Line.PointA*:
    name:
      CSharp:
      - id: LagaUnity.Line.PointA*
        name: PointA
        nameWithType: Line.PointA
        qualifiedName: LagaUnity.Line.PointA
      VB:
      - id: LagaUnity.Line.PointA*
        name: PointA
        nameWithType: Line.PointA
        qualifiedName: LagaUnity.Line.PointA
    isDefinition: true
    commentId: Overload:LagaUnity.Line.PointA
  LagaUnity.Line.PointB*:
    name:
      CSharp:
      - id: LagaUnity.Line.PointB*
        name: PointB
        nameWithType: Line.PointB
        qualifiedName: LagaUnity.Line.PointB
      VB:
      - id: LagaUnity.Line.PointB*
        name: PointB
        nameWithType: Line.PointB
        qualifiedName: LagaUnity.Line.PointB
    isDefinition: true
    commentId: Overload:LagaUnity.Line.PointB
  LagaUnity.Line.#ctor*:
    name:
      CSharp:
      - id: LagaUnity.Line.#ctor*
        name: Line
        nameWithType: Line.Line
        qualifiedName: LagaUnity.Line.Line
      VB:
      - id: LagaUnity.Line.#ctor*
        name: Line
        nameWithType: Line.Line
        qualifiedName: LagaUnity.Line.Line
    isDefinition: true
    commentId: Overload:LagaUnity.Line.#ctor
  LagaUnity.Line.MidPoint*:
    name:
      CSharp:
      - id: LagaUnity.Line.MidPoint*
        name: MidPoint
        nameWithType: Line.MidPoint
        qualifiedName: LagaUnity.Line.MidPoint
      VB:
      - id: LagaUnity.Line.MidPoint*
        name: MidPoint
        nameWithType: Line.MidPoint
        qualifiedName: LagaUnity.Line.MidPoint
    isDefinition: true
    commentId: Overload:LagaUnity.Line.MidPoint
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  LagaUnity.Line.ToString*:
    name:
      CSharp:
      - id: LagaUnity.Line.ToString*
        name: ToString
        nameWithType: Line.ToString
        qualifiedName: LagaUnity.Line.ToString
      VB:
      - id: LagaUnity.Line.ToString*
        name: ToString
        nameWithType: Line.ToString
        qualifiedName: LagaUnity.Line.ToString
    isDefinition: true
    commentId: Overload:LagaUnity.Line.ToString
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  UnityEngine:
    name:
      CSharp:
      - name: UnityEngine
        nameWithType: UnityEngine
        qualifiedName: UnityEngine
        isExternal: true
      VB:
      - name: UnityEngine
        nameWithType: UnityEngine
        qualifiedName: UnityEngine
    isDefinition: true
    commentId: N:UnityEngine
  UnityEngine.Color:
    name:
      CSharp:
      - id: UnityEngine.Color
        name: Color
        nameWithType: Color
        qualifiedName: UnityEngine.Color
        isExternal: true
      VB:
      - id: UnityEngine.Color
        name: Color
        nameWithType: Color
        qualifiedName: UnityEngine.Color
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.Color
  LagaUnity.Line.Draw*:
    name:
      CSharp:
      - id: LagaUnity.Line.Draw*
        name: Draw
        nameWithType: Line.Draw
        qualifiedName: LagaUnity.Line.Draw
      VB:
      - id: LagaUnity.Line.Draw*
        name: Draw
        nameWithType: Line.Draw
        qualifiedName: LagaUnity.Line.Draw
    isDefinition: true
    commentId: Overload:LagaUnity.Line.Draw
  LagaUnity.Line.DrawLine*:
    name:
      CSharp:
      - id: LagaUnity.Line.DrawLine*
        name: DrawLine
        nameWithType: Line.DrawLine
        qualifiedName: LagaUnity.Line.DrawLine
      VB:
      - id: LagaUnity.Line.DrawLine*
        name: DrawLine
        nameWithType: Line.DrawLine
        qualifiedName: LagaUnity.Line.DrawLine
    isDefinition: true
    commentId: Overload:LagaUnity.Line.DrawLine
  LagaUnity.Line:
    name:
      CSharp:
      - id: LagaUnity.Line
        name: Line
        nameWithType: Line
        qualifiedName: LagaUnity.Line
      VB:
      - id: LagaUnity.Line
        name: Line
        nameWithType: Line
        qualifiedName: LagaUnity.Line
    isDefinition: true
    commentId: T:LagaUnity.Line
  LagaUnity.Point.X*:
    name:
      CSharp:
      - id: LagaUnity.Point.X*
        name: X
        nameWithType: Point.X
        qualifiedName: LagaUnity.Point.X
      VB:
      - id: LagaUnity.Point.X*
        name: X
        nameWithType: Point.X
        qualifiedName: LagaUnity.Point.X
    isDefinition: true
    commentId: Overload:LagaUnity.Point.X
  LagaUnity.Point.Y*:
    name:
      CSharp:
      - id: LagaUnity.Point.Y*
        name: Y
        nameWithType: Point.Y
        qualifiedName: LagaUnity.Point.Y
      VB:
      - id: LagaUnity.Point.Y*
        name: Y
        nameWithType: Point.Y
        qualifiedName: LagaUnity.Point.Y
    isDefinition: true
    commentId: Overload:LagaUnity.Point.Y
  LagaUnity.Point.Z*:
    name:
      CSharp:
      - id: LagaUnity.Point.Z*
        name: Z
        nameWithType: Point.Z
        qualifiedName: LagaUnity.Point.Z
      VB:
      - id: LagaUnity.Point.Z*
        name: Z
        nameWithType: Point.Z
        qualifiedName: LagaUnity.Point.Z
    isDefinition: true
    commentId: Overload:LagaUnity.Point.Z
  LagaUnity.Point.#ctor*:
    name:
      CSharp:
      - id: LagaUnity.Point.#ctor*
        name: Point
        nameWithType: Point.Point
        qualifiedName: LagaUnity.Point.Point
      VB:
      - id: LagaUnity.Point.#ctor*
        name: Point
        nameWithType: Point.Point
        qualifiedName: LagaUnity.Point.Point
    isDefinition: true
    commentId: Overload:LagaUnity.Point.#ctor
  LagaUnity.Point.ToString*:
    name:
      CSharp:
      - id: LagaUnity.Point.ToString*
        name: ToString
        nameWithType: Point.ToString
        qualifiedName: LagaUnity.Point.ToString
      VB:
      - id: LagaUnity.Point.ToString*
        name: ToString
        nameWithType: Point.ToString
        qualifiedName: LagaUnity.Point.ToString
    isDefinition: true
    commentId: Overload:LagaUnity.Point.ToString
  LagaUnity.Point.Draw*:
    name:
      CSharp:
      - id: LagaUnity.Point.Draw*
        name: Draw
        nameWithType: Point.Draw
        qualifiedName: LagaUnity.Point.Draw
      VB:
      - id: LagaUnity.Point.Draw*
        name: Draw
        nameWithType: Point.Draw
        qualifiedName: LagaUnity.Point.Draw
    isDefinition: true
    commentId: Overload:LagaUnity.Point.Draw
  LagaUnity.Point.DistanceTo*:
    name:
      CSharp:
      - id: LagaUnity.Point.DistanceTo*
        name: DistanceTo
        nameWithType: Point.DistanceTo
        qualifiedName: LagaUnity.Point.DistanceTo
      VB:
      - id: LagaUnity.Point.DistanceTo*
        name: DistanceTo
        nameWithType: Point.DistanceTo
        qualifiedName: LagaUnity.Point.DistanceTo
    isDefinition: true
    commentId: Overload:LagaUnity.Point.DistanceTo
  LagaUnity.Point.DrawPoint*:
    name:
      CSharp:
      - id: LagaUnity.Point.DrawPoint*
        name: DrawPoint
        nameWithType: Point.DrawPoint
        qualifiedName: LagaUnity.Point.DrawPoint
      VB:
      - id: LagaUnity.Point.DrawPoint*
        name: DrawPoint
        nameWithType: Point.DrawPoint
        qualifiedName: LagaUnity.Point.DrawPoint
    isDefinition: true
    commentId: Overload:LagaUnity.Point.DrawPoint
