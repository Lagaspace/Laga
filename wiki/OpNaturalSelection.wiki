= Natural Selection =
<p align="justify">
There are many ways to select the best individuals in a population. Some methods are exclusive, but others can be combined with selection strategies. The natural selection algorithm is the operator who decide  which individuals are going to have a chance to crossover and who don`t. The possibility to be selected is extremely related with the fitness of the chromosome. We can not select always the most fit and reject the others, because the populations turns homogenic and will not search in the whole space solution, thus we are going to have a fast convergence and a not so good result.
<br/>
There are many natural selection algorithms, but all of them are based in the fitness evaluation. The natural selection must allow best individuals have more chances to offspring that worst. The "genes" of the best individuals are going to spread faster in the population than the others.
<br/>
There are many different natural selection algorithms and in almost all  cases are customized to face up specific problems. Some of them looks the lower computational resource, others deals with different select ranges, etc. The natural selection algorithm will determine the GA search strategy. If we select a high pressure selection method the search will be focus near to best individuals in the population. In the other hand if we select a low pressure selection method, we are going to leave many open roads to explore in the search space.
</p>
<br/>
=== Elitism Selection ===
<p align="justify">
This method select only the best ranked individuals in the population. Nevertheless the most GAs do not use this technique, in fact they use a modified elitism selection algorithm. This technique is not very useful because you get an early convergence in the population. The important thing is to ensure select some individuals with low fitness.
</p>
http://www.designemergente.org/laga/natSelection2.jpg
<br>
<p align="justify">
In this case only the first 5 individuals ranked in the population are going to be selected 10 times each. Since all of them has more than less the same fitness, The selected individuals are quite similar. this mean that the GA will search in small portion of the space search.
</p>
<br/>
<br/>
=== Roulette Wheel ===
<p align="justify"> 
The Roulette Wheel selection, probably is the most used technique in GAs. The selection of the individuals is proportional to their fitness. Each individual in the population has a chance to be selected for the next generation. The individuals in the top of the ranking (best fitness) will have more chance of be selected than the other with less fitness value.
</p><p align="justify"> 
Each individual in the population is assigned a piece of the roulette, proportional to their fitness. This mean the sum of all percents is equal to the whole value of the roulette. The individuals with high fitness will have a bigger percent in the roulette. Usually the top individuals are in the beginning of the roulette an so on to complete the graph. In order to make the selection is possible to generate a random number between 0 and the size of the roulette. The method is simple but no so useful when you work with big populations.
</p><p align="justify"> 
Is possible make modification of the traditional roulette wheel. The size of the roulette, the size of the population is not a fixed value, and some times is necessary re-define how many times the first individual in the ranking is going to be selected. Doing this is possible to increase the computational efficiency and manage the selection of the individuals with small fitness. This flavor of roulette wheel can be represented by the non polynomial curve y = 1/x.
</p>
http://www.designemergente.org/laga/natSelection.jpg
<br>
<p align="justify">
*Roulette Wheel Selection* In the image above the chromosome 1 has a fitness 100 and has a proportional area to it fitness into the roulette wheel. The chromosome 4, in the other hand, has a fitness 5. It is at the end of the roulette wheel and their selection probabilities are very small. Nevertheless it has some probabilities to be selected for crossover, as occur in the real life.
</p>
http://www.designemergente.org/laga/natSelection3.jpg
<br>
<p align="justify">
*Roulette Wheel Selection variations* In the image above there are two variations of a roulette wheel. Modifying the parameters of the functions is possible to control the size of the roulette, the selection of the individuals and the difference among them.
</p>
<br>
<br>
=== Tournament Selection ===
<p align="justify">
The idea consists in choose in random way, a bunch of individuals into the population. They use their fitness ranking to such as a tournament. The algorithm selects the top ranking individual in the bunch. The process is repeated until the new population is created.
Usually the size of the tournament is two, but you can include as many as you want. The size of the bunch is called pressure. If the bunch is bigger, more individuals will be in the tournament. This implies that the worst ranked individuals will have tinny chance of selection. In the other hand smaller bunch more options to be select.
Is possible to combine this method with the Climbing Selection algorithm you can increase the pressure progressively.
<br/>
There are mainly two flavors of the Tournament Selection algorithm.
</p>
http://www.designemergente.org/laga/natSelection4.jpg
<br>
==== Tournament Selection Deterministic ====
<p align="justify">
Usually you use the Deterministic method: Choose the top ranked individual. Its called deterministic because is based in the best and worst. This methid has the advantage to control the elitism, be you can control the pressure. Also you can avoid the premature convergence.

This method is very good to control the premature convergence.
Habitualmente, se selecciona el mejor de los individuos. Está técnica es llamada determinista de tipo, ya sea el mejor o el peor. Tiene la ventaja de que permite un cierto grado de elitismo, el mejor nunca va a morir y tienen más probabilidad de reproducirse que el menos adaptado. Además no produce una convergencia prematura.
</p>
<br>
<br>
==== Tournament Selection Probabilistic ====
<p align="justify">
This version generates a random number between 0 and 1. If the random number is bigger than some threshold, the algorithm select the top ranked individual. Else the algorithm select the other one.
</p>
<br>
<br>
=== Hierarchical Tournament Selection ===
<p align="justify">
The same individuals should have many tournament selection per each generation. Getting the selection, is become more precisely. this method reduce the calculus time of the GA.
</p>
<br>
<br>
=== Climbing Selection ===
<p align="justify">
This method Climbing Selection increase the selection threshold during the execution of the algorithm. So the fitness function its become more discriminatory. This method is useful when all the individuals are looks like similar and their difference is closer to 0. Also is useful in small populations.
</p>
<br>
<br>
=== Range Selection ===
<p align="justify">
Each individual has a based fitness range number. The algorithm select the individual from this number. The advantage is to avoid the top ranked individuals get domain over the others. In some way this algorithm preserve the diversity into the population. This method is useful in very noisy search spaces.
</p>
<br>
<br>
=== Generation Selection ===
<p align="justify">
Per each generation the algorithm select different individuals. So the old population is completely replaced.
</p>
<br>
<br>
=== Steady State Selection ===
<p align="justify">
The algorithm save individuals trough generations, also they have to pass many tournament selections. this technique allow save and replace the individuals in future generations, and replace others. This selection method is very similar like in the real world. This type of selection is useful for big populations.
</p>